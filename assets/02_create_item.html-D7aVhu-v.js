import{_ as s,c as a,d as t,o as p}from"./app-Du-lmcHR.js";const e={};function c(o,n){return p(),a("div",null,n[0]||(n[0]=[t(`<h2 id="注册物品" tabindex="-1"><a class="header-anchor" href="#注册物品"><span>注册物品</span></a></h2><h3 id="打开-init-addonitems-java-你将看到如下语句" tabindex="-1"><a class="header-anchor" href="#打开-init-addonitems-java-你将看到如下语句"><span>打开 <code>init.AddonItems.java</code> ，你将看到如下语句：</span></a></h3><ul><li><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">ItemEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Item</span><span class="token punctuation">&gt;</span></span> <span class="token constant">EXAMPLE_ITEM</span> <span class="token operator">=</span> <span class="token constant">REGISTRATE</span></span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">item</span><span class="token punctuation">(</span><span class="token string">&quot;example_item&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Item</span><span class="token operator">::</span><span class="token keyword">new</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>该语句即为注册物品的示例，其中 <code>example_item</code> 为你即将注册的物品的ID，<code>Item::new</code> 为你物品类构造方法的引用。</li><li><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token keyword">static</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token constant">REGISTRATE</span><span class="token punctuation">.</span><span class="token function">creativeModeTab</span><span class="token punctuation">(</span><span class="token class-name">ModCreativeModeTab</span><span class="token punctuation">.</span><span class="token constant">EXAMPLE_TAB</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>该代码块代表在此之后注册的物品将添加至指定的创造模式物品栏</li><li><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>该空方法用以加载此类</li></ul><h3 id="本章节内容将详细介绍-registrate-item-的使用方法" tabindex="-1"><a class="header-anchor" href="#本章节内容将详细介绍-registrate-item-的使用方法"><span>本章节内容将详细介绍 <code>REGISTRATE.item()</code> 的使用方法</span></a></h3><ul><li>使用 <code>REGISTRATE.item()</code> 方法后，你将拿到一个 <code>ItemBuilder</code> ，该对象拥有一个 <code>.register()</code> 方法，调用后返回一个 <code>ItemEntry</code> ，其对应的物品将在合适的时机自动注册，后文将着重介绍 <code>ItemBuilder</code> 与其所具备的方法。</li></ul><h4 id="itembuilder-properties" tabindex="-1"><a class="header-anchor" href="#itembuilder-properties"><span><code>ItemBuilder.properties()</code></span></a></h4><ul><li>该方法用于修改物品的默认属性，可以接受一个无返回值的 lambda 表达式，该表达式将当前物品属性作为参数传入</li><li>示例用法：<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">ItemEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Item</span><span class="token punctuation">&gt;</span></span> <span class="token constant">EXAMPLE_ITEM</span> <span class="token operator">=</span> <span class="token constant">REGISTRATE</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">item</span><span class="token punctuation">(</span><span class="token string">&quot;example_item&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Item</span><span class="token operator">::</span><span class="token keyword">new</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">properties</span><span class="token punctuation">(</span>prop<span class="token operator">-&gt;</span>prop<span class="token punctuation">.</span><span class="token function">durability</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>该示例展示了如何为注册的物品设置最大耐久值</li></ul><h4 id="itembuilder-initialproperties" tabindex="-1"><a class="header-anchor" href="#itembuilder-initialproperties"><span><code>ItemBuilder.initialProperties()</code></span></a></h4><ul><li>该方法用于设置物品的默认属性，接受一个返回 <code>Item.Properties</code> 的无参 lambda 表达式，返回值将作为该物品的默认物品属性</li><li>示例用法：<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">ItemEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Item</span><span class="token punctuation">&gt;</span></span> <span class="token constant">EXAMPLE_ITEM</span> <span class="token operator">=</span> <span class="token constant">REGISTRATE</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">item</span><span class="token punctuation">(</span><span class="token string">&quot;example_item&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Item</span><span class="token operator">::</span><span class="token keyword">new</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">initialProperties</span><span class="token punctuation">(</span><span class="token class-name">Item<span class="token punctuation">.</span>Properties</span><span class="token operator">::</span><span class="token keyword">new</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>该示例展示了如何为注册的物品设置物品默认属性，注意，你通常不需要这么做，该行为已在 <code>REGISTRATE</code> 中定义，该实例仅作为教学示范</li></ul><h4 id="itembuilder-tab-、-itembuilder-removetab" tabindex="-1"><a class="header-anchor" href="#itembuilder-tab-、-itembuilder-removetab"><span><code>ItemBuilder.tab()</code> 、 <code>ItemBuilder.removeTab()</code></span></a></h4><ul><li>我们不建议使用该方法设置创造模式物品栏，你应该使用文章开头的方法</li></ul><h4 id="itembuilder-color" tabindex="-1"><a class="header-anchor" href="#itembuilder-color"><span><code>ItemBuilder.color()</code></span></a></h4><ul><li>为该物品注册颜色处理器，对于大多数物品，你不需要使用该方法，特别的，如果你想制作类似药水的物品，该方法则很有帮助</li><li>示例用法：<div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">ItemEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Item</span><span class="token punctuation">&gt;</span></span> <span class="token constant">EXAMPLE_ITEM</span> <span class="token operator">=</span> <span class="token constant">REGISTRATE</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">item</span><span class="token punctuation">(</span><span class="token string">&quot;example_item&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Item</span><span class="token operator">::</span><span class="token keyword">new</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">color</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">(</span>itemStack<span class="token punctuation">,</span> i<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token number">0xFFFFFFFF</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>该用法仅供学习 <s>（过于抽象，不好评价）</s> ，返回值为颜色的 ARGB 值 <s>（为什么alpha在最前）</s></li></ul><h4 id="itembuilder-model" tabindex="-1"><a class="header-anchor" href="#itembuilder-model"><span><code>ItemBuilder.model()</code></span></a></h4><ul><li>该方法用于设定物品的模型生成器</li><li><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">ItemEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Item</span><span class="token punctuation">&gt;</span></span> <span class="token constant">EXAMPLE_ITEM</span> <span class="token operator">=</span> <span class="token constant">REGISTRATE</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">item</span><span class="token punctuation">(</span><span class="token string">&quot;example_item&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Item</span><span class="token operator">::</span><span class="token keyword">new</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> provider<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> provider<span class="token punctuation">.</span><span class="token function">handheld</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>该示例展示了如何为物品设置手持物品父模型（例如各种工具）的模型生成器</li></ul><h4 id="itembuilder-lang" tabindex="-1"><a class="header-anchor" href="#itembuilder-lang"><span><code>ItemBuilder.lang()</code></span></a></h4><ul><li>该方法用于设定物品的默认显示名称，未指定时，将自动使用注册ID转大驼峰加空格作为显示名称，该方法会生成 <code>en_us</code> 与 <code>en_ud（倒置英语）</code> 语言文件</li><li><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">ItemEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Item</span><span class="token punctuation">&gt;</span></span> <span class="token constant">EXAMPLE_ITEM</span> <span class="token operator">=</span> <span class="token constant">REGISTRATE</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">item</span><span class="token punctuation">(</span><span class="token string">&quot;example_item&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Item</span><span class="token operator">::</span><span class="token keyword">new</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">lang</span><span class="token punctuation">(</span><span class="token string">&quot;Item Example&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>该示例展示了如何将注册物品的默认显示名称修改为 <code>Item Example</code></li></ul><h4 id="itembuilder-recipe" tabindex="-1"><a class="header-anchor" href="#itembuilder-recipe"><span><code>ItemBuilder.recipe()</code></span></a></h4><ul><li>该方法用于设置物品的配方生成器</li><li><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">ItemEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Item</span><span class="token punctuation">&gt;</span></span> <span class="token constant">EXAMPLE_ITEM</span> <span class="token operator">=</span> <span class="token constant">REGISTRATE</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">item</span><span class="token punctuation">(</span><span class="token string">&quot;example_item&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Item</span><span class="token operator">::</span><span class="token keyword">new</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">recipe</span><span class="token punctuation">(</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> provider<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">ShapedRecipeBuilder</span><span class="token punctuation">.</span><span class="token function">shaped</span><span class="token punctuation">(</span><span class="token class-name">RecipeCategory</span><span class="token punctuation">.</span><span class="token constant">MISC</span><span class="token punctuation">,</span> ctx<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">pattern</span><span class="token punctuation">(</span><span class="token string">&quot;AB&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">pattern</span><span class="token punctuation">(</span><span class="token string">&quot;BA&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token char">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token class-name">Items</span><span class="token punctuation">.</span><span class="token constant">IRON_INGOT</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token char">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token class-name">Items</span><span class="token punctuation">.</span><span class="token constant">COPPER_INGOT</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">unlockedBy</span><span class="token punctuation">(</span><span class="token class-name">AnvilCraftDatagen</span><span class="token punctuation">.</span><span class="token function">hasItem</span><span class="token punctuation">(</span><span class="token class-name">Items</span><span class="token punctuation">.</span><span class="token constant">IRON_INGOT</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">RegistrateRecipeProvider</span><span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token class-name">Items</span><span class="token punctuation">.</span><span class="token constant">IRON_INGOT</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">unlockedBy</span><span class="token punctuation">(</span><span class="token class-name">AnvilCraftDatagen</span><span class="token punctuation">.</span><span class="token function">hasItem</span><span class="token punctuation">(</span><span class="token class-name">Items</span><span class="token punctuation">.</span><span class="token constant">COPPER_INGOT</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">RegistrateRecipeProvider</span><span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token class-name">Items</span><span class="token punctuation">.</span><span class="token constant">COPPER_INGOT</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>provider<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>该示例展示了如何为物品生成一个有序合成的配方，同时还将生成对应的解锁进度</li></ul><h4 id="itembuilder-tag" tabindex="-1"><a class="header-anchor" href="#itembuilder-tag"><span><code>ItemBuilder.tag()</code></span></a></h4><ul><li>该方法用于设置物品的标签生成器</li><li><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">ItemEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Item</span><span class="token punctuation">&gt;</span></span> <span class="token constant">EXAMPLE_ITEM</span> <span class="token operator">=</span> <span class="token constant">REGISTRATE</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">item</span><span class="token punctuation">(</span><span class="token string">&quot;example_item&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Item</span><span class="token operator">::</span><span class="token keyword">new</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token class-name">ItemTags</span><span class="token punctuation">.</span><span class="token constant">AXES</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>该示例展示如何将物品加入至原版斧子标签内</li></ul><h3 id="自定义物品类" tabindex="-1"><a class="header-anchor" href="#自定义物品类"><span>自定义物品类</span></a></h3><p>除了使用原版 Item 类，你还可以创建自定义的物品类：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CustomItem</span> <span class="token keyword">extends</span> <span class="token class-name">Item</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">CustomItem</span><span class="token punctuation">(</span><span class="token class-name">Properties</span> properties<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">super</span><span class="token punctuation">(</span>properties<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">inventoryTick</span><span class="token punctuation">(</span><span class="token class-name">ItemStack</span> stack<span class="token punctuation">,</span> <span class="token class-name">Level</span> level<span class="token punctuation">,</span> <span class="token class-name">Entity</span> entity<span class="token punctuation">,</span> <span class="token keyword">int</span> slotId<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isSelected<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 添加自定义逻辑</span></span>
<span class="line">        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">inventoryTick</span><span class="token punctuation">(</span>stack<span class="token punctuation">,</span> level<span class="token punctuation">,</span> entity<span class="token punctuation">,</span> slotId<span class="token punctuation">,</span> isSelected<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后在注册时使用：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">ItemEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CustomItem</span><span class="token punctuation">&gt;</span></span> <span class="token constant">CUSTOM_ITEM</span> <span class="token operator">=</span> <span class="token constant">REGISTRATE</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">item</span><span class="token punctuation">(</span><span class="token string">&quot;custom_item&quot;</span><span class="token punctuation">,</span> <span class="token class-name">CustomItem</span><span class="token operator">::</span><span class="token keyword">new</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="物品注册最佳实践" tabindex="-1"><a class="header-anchor" href="#物品注册最佳实践"><span>物品注册最佳实践</span></a></h3><ol><li><p><strong>命名规范</strong></p><ul><li>使用小写字母和下划线命名物品ID</li><li>保持命名的一致性和描述性</li></ul></li><li><p><strong>分类组织</strong></p><ul><li>将相关的物品放在同一个类中</li><li>使用有意义的类名，如 <code>ToolItems</code>、<code>MaterialItems</code> 等</li></ul></li><li><p><strong>及时注册</strong></p><ul><li>确保在 mod 主类的构造函数中调用 <code>register()</code> 方法</li><li>例如：<code>AddonItems.register();</code></li></ul></li><li><p><strong>避免重复注册</strong></p><ul><li>每个物品只应注册一次</li><li>使用唯一的物品ID</li></ul></li></ol><h3 id="完整示例" tabindex="-1"><a class="header-anchor" href="#完整示例"><span>完整示例</span></a></h3><p>以下是一个完整的自定义物品注册示例：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">ItemEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Item</span><span class="token punctuation">&gt;</span></span> <span class="token constant">RUBY</span> <span class="token operator">=</span> <span class="token constant">REGISTRATE</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">item</span><span class="token punctuation">(</span><span class="token string">&quot;ruby&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Item</span><span class="token operator">::</span><span class="token keyword">new</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">properties</span><span class="token punctuation">(</span>p <span class="token operator">-&gt;</span> p<span class="token punctuation">.</span><span class="token function">rarity</span><span class="token punctuation">(</span><span class="token class-name">Rarity</span><span class="token punctuation">.</span><span class="token constant">UNCOMMON</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">lang</span><span class="token punctuation">(</span><span class="token string">&quot;Ruby&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">recipe</span><span class="token punctuation">(</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> provider<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">ShapedRecipeBuilder</span><span class="token punctuation">.</span><span class="token function">shaped</span><span class="token punctuation">(</span><span class="token class-name">RecipeCategory</span><span class="token punctuation">.</span><span class="token constant">MISC</span><span class="token punctuation">,</span> ctx<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">pattern</span><span class="token punctuation">(</span><span class="token string">&quot;XXX&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">pattern</span><span class="token punctuation">(</span><span class="token string">&quot;XXX&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">pattern</span><span class="token punctuation">(</span><span class="token string">&quot;XXX&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token char">&#39;X&#39;</span><span class="token punctuation">,</span> <span class="token class-name">Tags<span class="token punctuation">.</span>Items</span><span class="token punctuation">.</span><span class="token constant">GEMS</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">unlockedBy</span><span class="token punctuation">(</span><span class="token string">&quot;has_gems&quot;</span><span class="token punctuation">,</span> <span class="token class-name">RegistrateRecipeProvider</span><span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token class-name">Tags<span class="token punctuation">.</span>Items</span><span class="token punctuation">.</span><span class="token constant">GEMS</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>provider<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token class-name">ItemTags</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ResourceLocation</span><span class="token punctuation">(</span><span class="token string">&quot;forge:gems/ruby&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个示例展示了如何：</p><ul><li>创建一个稀有度为&quot;不常见&quot;的物品</li><li>设置自定义的本地化名称</li><li>添加合成配方</li><li>添加自定义标签</li></ul>`,33)]))}const i=s(e,[["render",c]]),u=JSON.parse('{"path":"/addon/02_create_item.html","title":"","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"注册物品","slug":"注册物品","link":"#注册物品","children":[{"level":3,"title":"打开 init.AddonItems.java ，你将看到如下语句：","slug":"打开-init-addonitems-java-你将看到如下语句","link":"#打开-init-addonitems-java-你将看到如下语句","children":[]},{"level":3,"title":"本章节内容将详细介绍 REGISTRATE.item() 的使用方法","slug":"本章节内容将详细介绍-registrate-item-的使用方法","link":"#本章节内容将详细介绍-registrate-item-的使用方法","children":[]},{"level":3,"title":"自定义物品类","slug":"自定义物品类","link":"#自定义物品类","children":[]},{"level":3,"title":"物品注册最佳实践","slug":"物品注册最佳实践","link":"#物品注册最佳实践","children":[]},{"level":3,"title":"完整示例","slug":"完整示例","link":"#完整示例","children":[]}]}],"git":{"updatedTime":1755587434000,"contributors":[{"name":"Gugle","username":"Gugle","email":"administration@ztxy666.cn","commits":1,"url":"https://github.com/Gugle"}],"changelog":[{"hash":"d2377b5f3a64d9485c7f87b4a08bdc85e4608da4","time":1755587434000,"email":"administration@ztxy666.cn","author":"Gugle","message":"docs(中文): 添加 AnvilCraft 附属开发文档"}]},"filePathRelative":"addon/02_create_item.md"}');export{i as comp,u as data};
