import{_ as s,c as a,d as p,o as t}from"./app-BNrp8F-s.js";const c={};function e(o,n){return t(),a("div",null,n[0]||(n[0]=[p(`<h2 id="注册方块" tabindex="-1"><a class="header-anchor" href="#注册方块"><span>注册方块</span></a></h2><p>在 AnvilCraft 附属开发中，注册方块与注册物品类似，但涉及更多的属性和模型设置。</p><h3 id="打开-init-addonblocks-java-你将看到如下语句" tabindex="-1"><a class="header-anchor" href="#打开-init-addonblocks-java-你将看到如下语句"><span>打开 <code>init.AddonBlocks.java</code> ，你将看到如下语句：</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">BlockEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Block</span><span class="token punctuation">&gt;</span></span> <span class="token constant">EXAMPLE_BLOCK</span> <span class="token operator">=</span> <span class="token constant">REGISTRATE</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">block</span><span class="token punctuation">(</span><span class="token string">&quot;example_block&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Block</span><span class="token operator">::</span><span class="token keyword">new</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">simpleItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>该语句即为注册方块的示例，其中 <code>example_block</code> 为你即将注册的方块的ID，<code>Block::new</code> 为你方块类构造方法的引用。</p><h3 id="本章节内容将详细介绍-registrate-block-的使用方法" tabindex="-1"><a class="header-anchor" href="#本章节内容将详细介绍-registrate-block-的使用方法"><span>本章节内容将详细介绍 <code>REGISTRATE.block()</code> 的使用方法</span></a></h3><p>使用 <code>REGISTRATE.block()</code> 方法后，你将拿到一个 <code>BlockBuilder</code> ，该对象拥有一个 <code>.register()</code> 方法，调用后返回一个 <code>BlockEntry</code> ，其对应的方块将在合适的时机自动注册。</p><h4 id="blockbuilder-initialproperties" tabindex="-1"><a class="header-anchor" href="#blockbuilder-initialproperties"><span><code>BlockBuilder.initialProperties()</code></span></a></h4><p>该方法用于设置方块的初始属性，通常基于一个现有的方块属性：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">BlockEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Block</span><span class="token punctuation">&gt;</span></span> <span class="token constant">EXAMPLE_BLOCK</span> <span class="token operator">=</span> <span class="token constant">REGISTRATE</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">block</span><span class="token punctuation">(</span><span class="token string">&quot;example_block&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Block</span><span class="token operator">::</span><span class="token keyword">new</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">initialProperties</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Blocks</span><span class="token punctuation">.</span><span class="token constant">IRON_BLOCK</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">simpleItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>该示例展示了如何为注册的方块设置初始属性，继承了铁块的属性。</p><h4 id="blockbuilder-properties" tabindex="-1"><a class="header-anchor" href="#blockbuilder-properties"><span><code>BlockBuilder.properties()</code></span></a></h4><p>该方法用于修改方块的特定属性：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">BlockEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Block</span><span class="token punctuation">&gt;</span></span> <span class="token constant">EXAMPLE_BLOCK</span> <span class="token operator">=</span> <span class="token constant">REGISTRATE</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">block</span><span class="token punctuation">(</span><span class="token string">&quot;example_block&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Block</span><span class="token operator">::</span><span class="token keyword">new</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">initialProperties</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Blocks</span><span class="token punctuation">.</span><span class="token constant">STONE</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">properties</span><span class="token punctuation">(</span>p <span class="token operator">-&gt;</span> p<span class="token punctuation">.</span><span class="token function">lightLevel</span><span class="token punctuation">(</span>state <span class="token operator">-&gt;</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">noOcclusion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">simpleItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>该示例展示了如何设置方块的亮度等级和无遮挡属性。</p><h4 id="blockbuilder-tag" tabindex="-1"><a class="header-anchor" href="#blockbuilder-tag"><span><code>BlockBuilder.tag()</code></span></a></h4><p>该方法用于设置方块的标签：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">BlockEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Block</span><span class="token punctuation">&gt;</span></span> <span class="token constant">EXAMPLE_BLOCK</span> <span class="token operator">=</span> <span class="token constant">REGISTRATE</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">block</span><span class="token punctuation">(</span><span class="token string">&quot;example_block&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Block</span><span class="token operator">::</span><span class="token keyword">new</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">initialProperties</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Blocks</span><span class="token punctuation">.</span><span class="token constant">STONE</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token class-name">BlockTags</span><span class="token punctuation">.</span><span class="token constant">MINEABLE_WITH_PICKAXE</span><span class="token punctuation">,</span> <span class="token class-name">BlockTags</span><span class="token punctuation">.</span><span class="token constant">NEEDS_STONE_TOOL</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">simpleItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>该示例展示了如何将方块添加到&quot;可使用镐挖掘&quot;和&quot;需要石镐&quot;标签中。</p><h4 id="blockbuilder-blockstate" tabindex="-1"><a class="header-anchor" href="#blockbuilder-blockstate"><span><code>BlockBuilder.blockstate()</code></span></a></h4><p>该方法用于设置方块的状态和模型：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">BlockEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Block</span><span class="token punctuation">&gt;</span></span> <span class="token constant">EXAMPLE_BLOCK</span> <span class="token operator">=</span> <span class="token constant">REGISTRATE</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">block</span><span class="token punctuation">(</span><span class="token string">&quot;example_block&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Block</span><span class="token operator">::</span><span class="token keyword">new</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">initialProperties</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Blocks</span><span class="token punctuation">.</span><span class="token constant">STONE</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">blockstate</span><span class="token punctuation">(</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> provider<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> provider<span class="token punctuation">.</span><span class="token function">simpleBlock</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">simpleItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>该示例展示了如何为方块设置简单的方块模型。</p><h4 id="blockbuilder-item" tabindex="-1"><a class="header-anchor" href="#blockbuilder-item"><span><code>BlockBuilder.item()</code></span></a></h4><p>该方法用于为方块注册对应的物品：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">BlockEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Block</span><span class="token punctuation">&gt;</span></span> <span class="token constant">EXAMPLE_BLOCK</span> <span class="token operator">=</span> <span class="token constant">REGISTRATE</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">block</span><span class="token punctuation">(</span><span class="token string">&quot;example_block&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Block</span><span class="token operator">::</span><span class="token keyword">new</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">initialProperties</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Blocks</span><span class="token punctuation">.</span><span class="token constant">STONE</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">blockstate</span><span class="token punctuation">(</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> provider<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> provider<span class="token punctuation">.</span><span class="token function">simpleBlock</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">item</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">initialProperties</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Item<span class="token punctuation">.</span>Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>该示例展示了如何为方块注册物品，并设置物品属性。</p><h4 id="blockbuilder-simpleitem" tabindex="-1"><a class="header-anchor" href="#blockbuilder-simpleitem"><span><code>BlockBuilder.simpleItem()</code></span></a></h4><p>这是一个便捷方法，用于快速为方块注册基础物品：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">BlockEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Block</span><span class="token punctuation">&gt;</span></span> <span class="token constant">EXAMPLE_BLOCK</span> <span class="token operator">=</span> <span class="token constant">REGISTRATE</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">block</span><span class="token punctuation">(</span><span class="token string">&quot;example_block&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Block</span><span class="token operator">::</span><span class="token keyword">new</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">initialProperties</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Blocks</span><span class="token punctuation">.</span><span class="token constant">STONE</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">blockstate</span><span class="token punctuation">(</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> provider<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> provider<span class="token punctuation">.</span><span class="token function">simpleBlock</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">simpleItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>该示例展示了如何使用 <code>simpleItem()</code> 快速为方块注册物品。</p><h4 id="blockbuilder-recipe" tabindex="-1"><a class="header-anchor" href="#blockbuilder-recipe"><span><code>BlockBuilder.recipe()</code></span></a></h4><p>该方法用于设置方块的配方：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">BlockEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Block</span><span class="token punctuation">&gt;</span></span> <span class="token constant">EXAMPLE_BLOCK</span> <span class="token operator">=</span> <span class="token constant">REGISTRATE</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">block</span><span class="token punctuation">(</span><span class="token string">&quot;example_block&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Block</span><span class="token operator">::</span><span class="token keyword">new</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">initialProperties</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Blocks</span><span class="token punctuation">.</span><span class="token constant">STONE</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">blockstate</span><span class="token punctuation">(</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> provider<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> provider<span class="token punctuation">.</span><span class="token function">simpleBlock</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">simpleItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">recipe</span><span class="token punctuation">(</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> provider<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">ShapedRecipeBuilder</span><span class="token punctuation">.</span><span class="token function">shaped</span><span class="token punctuation">(</span><span class="token class-name">RecipeCategory</span><span class="token punctuation">.</span><span class="token constant">BUILDING_BLOCKS</span><span class="token punctuation">,</span> ctx<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">pattern</span><span class="token punctuation">(</span><span class="token string">&quot;XX&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">pattern</span><span class="token punctuation">(</span><span class="token string">&quot;XX&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token char">&#39;X&#39;</span><span class="token punctuation">,</span> <span class="token class-name">Items</span><span class="token punctuation">.</span><span class="token constant">STONE</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">unlockedBy</span><span class="token punctuation">(</span><span class="token class-name">AnvilCraftDatagen</span><span class="token punctuation">.</span><span class="token function">hasItem</span><span class="token punctuation">(</span><span class="token class-name">Items</span><span class="token punctuation">.</span><span class="token constant">STONE</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">RegistrateRecipeProvider</span><span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token class-name">Items</span><span class="token punctuation">.</span><span class="token constant">STONE</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>provider<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>该示例展示了如何为方块添加一个有序合成配方。</p><h3 id="自定义方块类" tabindex="-1"><a class="header-anchor" href="#自定义方块类"><span>自定义方块类</span></a></h3><p>除了使用原版 Block 类，你还可以创建自定义的方块类：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CustomBlock</span> <span class="token keyword">extends</span> <span class="token class-name">Block</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">CustomBlock</span><span class="token punctuation">(</span><span class="token class-name">Properties</span> properties<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">super</span><span class="token punctuation">(</span>properties<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onPlace</span><span class="token punctuation">(</span><span class="token class-name">BlockState</span> state<span class="token punctuation">,</span> <span class="token class-name">Level</span> level<span class="token punctuation">,</span> <span class="token class-name">BlockPos</span> pos<span class="token punctuation">,</span> <span class="token class-name">BlockState</span> oldState<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isMoving<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 添加自定义逻辑</span></span>
<span class="line">        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onPlace</span><span class="token punctuation">(</span>state<span class="token punctuation">,</span> level<span class="token punctuation">,</span> pos<span class="token punctuation">,</span> oldState<span class="token punctuation">,</span> isMoving<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后在注册时使用：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">BlockEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CustomBlock</span><span class="token punctuation">&gt;</span></span> <span class="token constant">CUSTOM_BLOCK</span> <span class="token operator">=</span> <span class="token constant">REGISTRATE</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">block</span><span class="token punctuation">(</span><span class="token string">&quot;custom_block&quot;</span><span class="token punctuation">,</span> <span class="token class-name">CustomBlock</span><span class="token operator">::</span><span class="token keyword">new</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">initialProperties</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Blocks</span><span class="token punctuation">.</span><span class="token constant">STONE</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">simpleItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="方块注册最佳实践" tabindex="-1"><a class="header-anchor" href="#方块注册最佳实践"><span>方块注册最佳实践</span></a></h3><ol><li><p><strong>命名规范</strong></p><ul><li>使用小写字母和下划线命名方块ID</li><li>保持命名的一致性和描述性</li></ul></li><li><p><strong>属性设置</strong></p><ul><li>始终设置合适的初始属性</li><li>根据方块的功能添加适当的标签</li></ul></li><li><p><strong>模型和渲染</strong></p><ul><li>为方块提供合适的模型</li><li>考虑方块的光照和遮挡属性</li></ul></li><li><p><strong>配方设计</strong></p><ul><li>为方块提供合理的合成配方</li><li>确保配方平衡，不破坏游戏体验</li></ul></li><li><p><strong>及时注册</strong></p><ul><li>确保在 mod 主类的构造函数中调用 <code>register()</code> 方法</li><li>例如：<code>AddonBlocks.register();</code></li></ul></li></ol><h3 id="完整示例" tabindex="-1"><a class="header-anchor" href="#完整示例"><span>完整示例</span></a></h3><p>以下是一个完整的自定义方块注册示例：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">BlockEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Block</span><span class="token punctuation">&gt;</span></span> <span class="token constant">RUBY_BLOCK</span> <span class="token operator">=</span> <span class="token constant">REGISTRATE</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">block</span><span class="token punctuation">(</span><span class="token string">&quot;ruby_block&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Block</span><span class="token operator">::</span><span class="token keyword">new</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">initialProperties</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Blocks</span><span class="token punctuation">.</span><span class="token constant">IRON_BLOCK</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">properties</span><span class="token punctuation">(</span>p <span class="token operator">-&gt;</span> p<span class="token punctuation">.</span><span class="token function">lightLevel</span><span class="token punctuation">(</span>state <span class="token operator">-&gt;</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token class-name">BlockTags</span><span class="token punctuation">.</span><span class="token constant">MINEABLE_WITH_PICKAXE</span><span class="token punctuation">,</span> <span class="token class-name">BlockTags</span><span class="token punctuation">.</span><span class="token constant">BEACON_BASE_BLOCKS</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">blockstate</span><span class="token punctuation">(</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> provider<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> provider<span class="token punctuation">.</span><span class="token function">simpleBlock</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">simpleItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">recipe</span><span class="token punctuation">(</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> provider<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">ShapedRecipeBuilder</span><span class="token punctuation">.</span><span class="token function">shaped</span><span class="token punctuation">(</span><span class="token class-name">RecipeCategory</span><span class="token punctuation">.</span><span class="token constant">BUILDING_BLOCKS</span><span class="token punctuation">,</span> ctx<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">pattern</span><span class="token punctuation">(</span><span class="token string">&quot;XXX&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">pattern</span><span class="token punctuation">(</span><span class="token string">&quot;XXX&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">pattern</span><span class="token punctuation">(</span><span class="token string">&quot;XXX&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token char">&#39;X&#39;</span><span class="token punctuation">,</span> <span class="token class-name">ModItems</span><span class="token punctuation">.</span><span class="token constant">RUBY</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">unlockedBy</span><span class="token punctuation">(</span><span class="token class-name">AnvilCraftDatagen</span><span class="token punctuation">.</span><span class="token function">hasItem</span><span class="token punctuation">(</span><span class="token class-name">ModItems</span><span class="token punctuation">.</span><span class="token constant">RUBY</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">RegistrateRecipeProvider</span><span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token class-name">ModItems</span><span class="token punctuation">.</span><span class="token constant">RUBY</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>provider<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个示例展示了如何：</p><ul><li>创建一个基于铁块属性的方块</li><li>设置方块的亮度等级</li><li>添加适当的标签</li><li>设置简单的方块模型</li><li>为方块注册物品</li><li>添加合成配方</li></ul>`,47)]))}const i=s(c,[["render",e]]),u=JSON.parse('{"path":"/addon/03_create_block.html","title":"","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"注册方块","slug":"注册方块","link":"#注册方块","children":[{"level":3,"title":"打开 init.AddonBlocks.java ，你将看到如下语句：","slug":"打开-init-addonblocks-java-你将看到如下语句","link":"#打开-init-addonblocks-java-你将看到如下语句","children":[]},{"level":3,"title":"本章节内容将详细介绍 REGISTRATE.block() 的使用方法","slug":"本章节内容将详细介绍-registrate-block-的使用方法","link":"#本章节内容将详细介绍-registrate-block-的使用方法","children":[]},{"level":3,"title":"自定义方块类","slug":"自定义方块类","link":"#自定义方块类","children":[]},{"level":3,"title":"方块注册最佳实践","slug":"方块注册最佳实践","link":"#方块注册最佳实践","children":[]},{"level":3,"title":"完整示例","slug":"完整示例","link":"#完整示例","children":[]}]}],"git":{"updatedTime":1755587434000,"contributors":[{"name":"Gugle","username":"Gugle","email":"administration@ztxy666.cn","commits":1,"url":"https://github.com/Gugle"}],"changelog":[{"hash":"d2377b5f3a64d9485c7f87b4a08bdc85e4608da4","time":1755587434000,"email":"administration@ztxy666.cn","author":"Gugle","message":"docs(中文): 添加 AnvilCraft 附属开发文档"}]},"filePathRelative":"addon/03_create_block.md"}');export{i as comp,u as data};
