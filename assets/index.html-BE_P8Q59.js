import{_ as s,c as o,d as r,a as n,e as a,b as i,w as e,r as d,o as g}from"./app-BemHiPUM.js";const h={};function u(f,l){const t=d("RouteLink");return g(),o("div",null,[l[9]||(l[9]=r('<h1 id="附属开发" tabindex="-1"><a class="header-anchor" href="#附属开发"><span>附属开发</span></a></h1><p>欢迎来到 AnvilCraft 附属开发文档！本章节将指导您如何创建自己的 AnvilCraft 附属模组。</p><h2 id="什么是附属模组" tabindex="-1"><a class="header-anchor" href="#什么是附属模组"><span>什么是附属模组？</span></a></h2><p>附属模组是基于 AnvilCraft 核心模组构建的扩展模组，它允许开发者和创作者：</p><ul><li>添加新的物品和方块</li><li>创建自定义配方</li><li>扩展现有的 AnvilCraft 机制</li><li>与其他模组进行集成</li><li>为 AnvilCraft 生态系统贡献新内容</li></ul><h2 id="为什么创建附属模组" tabindex="-1"><a class="header-anchor" href="#为什么创建附属模组"><span>为什么创建附属模组？</span></a></h2><ol><li><strong>扩展功能</strong>：在不修改核心模组的情况下添加新内容</li><li><strong>保持兼容性</strong>：附属模组可以与 AnvilCraft 主模组及其他附属模组良好协作</li><li><strong>社区贡献</strong>：为 AnvilCraft 社区贡献您的创意和想法</li><li><strong>学习机会</strong>：通过实践深入了解 Minecraft 模组开发</li></ol><h2 id="开发前准备" tabindex="-1"><a class="header-anchor" href="#开发前准备"><span>开发前准备</span></a></h2><p>在开始开发之前，您需要：</p><ol><li>熟悉 Java 编程语言</li><li>了解 Minecraft 原版机制</li><li>掌握基本的模组开发概念</li><li>准备好开发环境（JDK 21、IDE 等）</li></ol><h2 id="开发流程概览" tabindex="-1"><a class="header-anchor" href="#开发流程概览"><span>开发流程概览</span></a></h2>',11)),n("ol",null,[n("li",null,[a(t,{to:"/addon/01_environment.html"},{default:e(()=>l[0]||(l[0]=[i("环境搭建与模组构建",-1)])),_:1,__:[0]}),l[1]||(l[1]=i(" - 配置开发环境",-1))]),n("li",null,[a(t,{to:"/addon/02_create_item.html"},{default:e(()=>l[2]||(l[2]=[i("创建你的第一个物品",-1)])),_:1,__:[2]}),l[3]||(l[3]=i(" - 学习基本的物品注册",-1))]),n("li",null,[a(t,{to:"/addon/03_create_block.html"},{default:e(()=>l[4]||(l[4]=[i("创建你的第一个方块",-1)])),_:1,__:[4]}),l[5]||(l[5]=i(" - 学习基本的方块注册",-1))])]),l[10]||(l[10]=r('<h2 id="技术栈" tabindex="-1"><a class="header-anchor" href="#技术栈"><span>技术栈</span></a></h2><p>AnvilCraft 附属模组开发主要使用以下技术：</p><ul><li><strong>Java 21</strong> - 开发语言</li><li><strong>Gradle</strong> - 构建工具</li><li><strong>Registrate</strong> - 内容注册系统</li><li><strong>NeoForge</strong> - 模组加载器 API</li><li><strong>Lombok</strong> - 简化 Java 代码编写</li></ul><h2 id="最佳实践" tabindex="-1"><a class="header-anchor" href="#最佳实践"><span>最佳实践</span></a></h2><ul><li>遵循 AnvilCraft 的设计语言和风格</li><li>保持与原版 Minecraft 的一致性</li><li>充分利用 AnvilCraft 提供的 API</li><li>编写清晰的文档和注释</li><li>进行充分的测试</li></ul>',5)),n("p",null,[l[7]||(l[7]=i("准备好开始您的附属开发之旅了吗？让我们从",-1)),a(t,{to:"/addon/01_environment.html"},{default:e(()=>l[6]||(l[6]=[i("环境搭建",-1)])),_:1,__:[6]}),l[8]||(l[8]=i("开始吧！",-1))])])}const m=s(h,[["render",u]]),v=JSON.parse('{"path":"/addon/","title":"附属开发","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"什么是附属模组？","slug":"什么是附属模组","link":"#什么是附属模组","children":[]},{"level":2,"title":"为什么创建附属模组？","slug":"为什么创建附属模组","link":"#为什么创建附属模组","children":[]},{"level":2,"title":"开发前准备","slug":"开发前准备","link":"#开发前准备","children":[]},{"level":2,"title":"开发流程概览","slug":"开发流程概览","link":"#开发流程概览","children":[]},{"level":2,"title":"技术栈","slug":"技术栈","link":"#技术栈","children":[]},{"level":2,"title":"最佳实践","slug":"最佳实践","link":"#最佳实践","children":[]}],"git":{"updatedTime":1755587434000,"contributors":[{"name":"Gugle","username":"Gugle","email":"administration@ztxy666.cn","commits":1,"url":"https://github.com/Gugle"}],"changelog":[{"hash":"d2377b5f3a64d9485c7f87b4a08bdc85e4608da4","time":1755587434000,"email":"administration@ztxy666.cn","author":"Gugle","message":"docs(中文): 添加 AnvilCraft 附属开发文档"}]},"filePathRelative":"addon/index.md"}');export{m as comp,v as data};
